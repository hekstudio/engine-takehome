load("@bazel_skylib//rules:common_settings.bzl", "string_flag")

string_flag(
    name = "clang_format",
    build_setting_default = "clang-format",
)

genrule(
    name = "format",
    srcs = glob([
        "src/*.cpp",
        "include/*.h",
    ]),
    outs = [],
    cmd = "$(CLANG_FORMAT) -i $(SRCS)",
    tools = [":clang_format"],
)

# ======================================
# libraries
# ======================================
cc_library(
    name = "lib_order_status",
    hdrs = ["include/order_status.h"],
    copts = ["-std=c++17"],
    includes = ["include"],
    visibility = ["//visibility:public"],
)

cc_library(
    name = "lib_trade",
    srcs = ["src/trade.cpp"],
    hdrs = ["include/trade.h"],
    copts = ["-std=c++17"],
    includes = ["include"],
    visibility = ["//visibility:public"],
)

cc_library(
    name = "lib_order",
    srcs = ["src/order.cpp"],
    hdrs = ["include/order.h"],
    copts = ["-std=c++17"],
    includes = ["include"],
    visibility = ["//visibility:public"],
    deps = ["lib_order_status"],
)

cc_library(
    name = "lib_order_book",
    srcs = ["src/order_book.cpp"],
    hdrs = ["include/order_book.h"],
    copts = ["-std=c++17"],
    includes = ["include"],
    visibility = ["//visibility:public"],
    deps = [
        "lib_order",
        "lib_trade",
    ],
)

cc_library(
    name = "lib_order_manager",
    srcs = ["src/order_manager.cpp"],
    hdrs = ["include/order_manager.h"],
    copts = ["-std=c++17"],
    includes = ["include"],
    visibility = ["//visibility:public"],
    deps = ["lib_order_book"],
)

# ======================================
# tests
# ======================================
cc_test(
    name = "test_order",
    srcs = ["tests/test_order.cpp"],
    copts = ["-std=c++17"],
    deps = [
        "lib_order",
        "@com_google_googletest//:gtest_main",  # Add if you're using Google Test
    ],
)

cc_test(
    name = "test_order_book",
    srcs = ["tests/test_order_book.cpp"],
    copts = ["-std=c++17"],
    data = [
        "tests/test_input_01.txt",  # random orders
        "tests/test_input_02.txt",  # orders that won't be matched
        "tests/test_input_03.txt",  # orders will be traded completely
    ],  # Include the input file
    deps = [
        "lib_order_manager",
        "@com_google_googletest//:gtest_main",  # Add if you're using Google Test
    ],
)

# ======================================
# executables
# ======================================
cc_binary(
    name = "main",
    srcs = ["main.cpp"],
    copts = ["-std=c++17"],
    data = ["tests/sample_input.txt"],  # Include the input file
    deps = [
        "lib_order_manager",
        "@boost//:program_options",
    ],
)
